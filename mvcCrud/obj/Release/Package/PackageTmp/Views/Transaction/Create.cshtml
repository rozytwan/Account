
@model mvcCrud.Models.Transaction
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Transactions</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.category_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("category_name", ViewData["FeedBack"] as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control col-md-2" } })
            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.paymentmode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 payment">
                Cash
                @Html.RadioButtonFor(model => model.paymentmode, "Cash", new { Checked = "checked" })
                Atm Card
                @Html.RadioButtonFor(model => model.paymentmode, "Bank")
                Cheque
                @Html.RadioButtonFor(model => model.paymentmode, "Cheque")
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
            </div>
        </div>
   
        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "datepicker form-control", placeholder = "Transaction Date" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div> 
        <div class="form-group">

            <div class="col-md-10">
                @if (ViewBag.msg != null)
                {
                    @ViewBag.msg;
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>

    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
<script src="~/scripts/jquery-ui-1.12.1.min.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {
          
            $('#description').autocomplete({

            });
            $('#amount').autocomplete({

            });
            $('#date').autocomplete({

            });
         $('input[type=datetime]').datepicker({
             dateFormat: "dd/M/yy",
             changeMonth: true,
             changeYear: true,
             yearRange: "-60:+0"
         });

     });
    </script>
    .
}
  
